name: Deploy to AWS

on:
  push:
    branches:
      - main

  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
  AWS_DEFAULT_REGION: 'us-east-1'
  TF_STATE_BUCKET: ${{ secrets.TF_STATE_BUCKET }}
  MYSQL_USERNAME: ${{ secrets.MYSQL_USERNAME }}
  MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v2
  
      - name: setup-terraform
        uses: hashicorp/setup-terraform@v1

      # Deploy the MySQL RDS instance
      - name: terraform-init
        run: terraform -chdir=./mysql init -backend-config="bucket=${TF_STATE_BUCKET}" -backend-config="key=mysql.tfstate" -backend-config="region=us-east-1"

      - name: terraform-apply
        run: terraform -chdir=./mysql apply -auto-approve -var "MYSQL_USERNAME=${MYSQL_USERNAME}" -var "MYSQL_PASSWORD=${MYSQL_PASSWORD}"

      # Lambda Function for initializing the database tables
      - name: terraform-init
        run: terraform -chdir=./lambda-initdb init -backend-config="bucket=${TF_STATE_BUCKET}" -backend-config="key=lambda-initdb.tfstate" -backend-config="region=us-east-1"

      - name: terraform-apply
        run: terraform -chdir=./lambda-initdb apply -auto-approve -var "MYSQL_USERNAME=${MYSQL_USERNAME}" -var "MYSQL_PASSWORD=${MYSQL_PASSWORD}"

      # Destroy the Lambda Function after execution
      # The Lambda function is only needed to initialize the database tables, so we can destroy it after the tables are created
      - name: terraform-destroy
        run: terraform -chdir=./lambda-initdb destroy -auto-approve -var "MYSQL_USERNAME=" -var "MYSQL_PASSWORD="